@page "/patient/list/{Page}"
@inject HttpClient Http
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper
@using BlazorCrud.Shared.Data
@inject LocalStorage Storage

<h1>Patient Data</h1>
<p>This component demonstrates fetching patient data from the server.</p>

@if (isLoggedOn())
{
    <p>
        <a href="/patient/new">Add New Patient</a>
    </p>
}

@if (Patients == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class='table'>
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Gender</th>
                <th>Primary Care Provier</th>
                <th>State</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var patient in Patients.Results)
            {
                <tr>
                    <td>@patient.Id</td>
                    <td>@patient.Name</td>
                    <td>@patient.Gender</td>
                    <td>@patient.PrimaryCareProvider</td>
                    <td>@patient.State</td>
                    <td>
                        <a href='/patient/view/@patient.Id'>View</a>
                        @if (isLoggedOn())
                        {
                        <span> | </span><a href='/patient/edit/@patient.Id'>Edit</a>
                        <span> | </span><a href='/patient/delete/@patient.Id'>Delete</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <Pager Result=@Patients PageChanged=@PagerPageChanged />
} 

@functions {
    [Parameter]
    protected string Page { get; set; } = "1";

    protected PagedResult<Patient> Patients;

    protected override async Task OnParametersSetAsync()
    {
        if (UriHelper.GetBaseUri() == "http://localhost:10001/")
        {
            Patients = await Http.GetJsonAsync<PagedResult<Patient>>("http://localhost:10002/api/patient/?page=" + Page);
        }
        else
        {
            Patients = await Http.GetJsonAsync<PagedResult<Patient>>("http://becksapi.azurewebsites.net/api/patient?page=" + Page);
        }
    }
    protected void PagerPageChanged(int page)
    {
        UriHelper.NavigateTo("/patient/list/" + page);
    }

    protected bool isLoggedOn()
    {
        return Storage["JWT-Token"] != String.Empty;
    }
}