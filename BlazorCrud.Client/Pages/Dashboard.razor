@page "/dashboard"
@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.ChartJS.BarChart
@using ChartJs.Blazor.ChartJS.BarChart.Axes
@using ChartJs.Blazor.ChartJS.Common.Axes
@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.ChartJS.Common.Wrappers
@using ChartJs.Blazor.ChartJS.PieChart
@using ChartJs.Blazor.Util
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper

<div class="row">
    <div class="col-md-4">
        <BSCard CardType="CardType.Card">
            <BSCard Color="Color.Light" IsOutline="true">
                <BSCard CardType="CardType.Body">
                    <BSCard CardType="CardType.Title">Patients By State</BSCard>
                    <ChartJsPieChart @ref="_doughnutChartJsPatient" Config="@_doughnutChartConfigPatient" />
                    <a href="patient/list/1" class="btn btn-primary">View details &raquo;</a>
                </BSCard>
            </BSCard>
        </BSCard>
    </div>
    <div class="col-md-4">
        <BSCard CardType="CardType.Card">
            <BSCard Color="Color.Light" IsOutline="true">
                <BSCard CardType="CardType.Body">
                    <BSCard CardType="CardType.Title">Organizations by Type</BSCard>
                    <ChartJsPieChart @ref="_doughnutChartJsOrganization" Config="@_doughnutChartConfigOrganization" />
                    <a href="organization/list/1" class="btn btn-primary">View details &raquo;</a>
                </BSCard>
            </BSCard>
        </BSCard>
    </div>
    <div class="col-md-4">
        <BSCard CardType="CardType.Card">
            <BSCard Color="Color.Light" IsOutline="true">
                <BSCard CardType="CardType.Body">
                    <BSCard CardType="CardType.Title">Claims by Type</BSCard>
                    <ChartJsPieChart @ref="_doughnutChartJsClaim" Config="@_doughnutChartConfigClaim" />
                    <a href="claim/list/1" class="btn btn-primary">View details &raquo;</a>
                </BSCard>
            </BSCard>
        </BSCard>
    </div>
</div>
<hr>
<div class="row">
    <div class="col-md-12">
        <BSCard CardType="CardType.Card">
            <BSCard Color="Color.Light" IsOutline="true">
                <BSCard CardType="CardType.Body">
                    <BSCard CardType="CardType.Title">Recently Created or Modified Patients, Organizations, and Claims</BSCard>
                    <ChartJsBarChart @ref="_barChartJs" Config="@_barChartConfig" Width="600" Height="200" />
                </BSCard>
            </BSCard>
        </BSCard>
    </div>
</div>
<br>



@code {
    private PieConfig _doughnutChartConfigPatient;
    private ChartJsPieChart _doughnutChartJsPatient;
    private PieConfig _doughnutChartConfigOrganization;
    private ChartJsPieChart _doughnutChartJsOrganization;
    private PieConfig _doughnutChartConfigClaim;
    private ChartJsPieChart _doughnutChartJsClaim;
    private BarConfig _barChartConfig;
    private ChartJsBarChart _barChartJs;

    protected override void OnInitialized()
    {
        _doughnutChartConfigPatient = new PieConfig
        {
            Options = new PieOptions(true)
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Patients by State"
                },
                Responsive = true,
                Animation = new ArcAnimation
                {
                    AnimateRotate = true,
                    AnimateScale = true
                }
            }
        };

        _doughnutChartConfigOrganization = new PieConfig
        {
            Options = new PieOptions(true)
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Organizations by Type"
                },
                Responsive = true,
                Animation = new ArcAnimation
                {
                    AnimateRotate = true,
                    AnimateScale = true
                }
            }
        };

        _doughnutChartConfigClaim = new PieConfig
        {
            Options = new PieOptions(true)
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Claims by Type"
                },
                Responsive = true,
                Animation = new ArcAnimation
                {
                    AnimateRotate = true,
                    AnimateScale = true
                }
            }
        };

        _barChartConfig = new BarConfig
        {
            Options = new BarOptions
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Patients, Organizations, and Claims Counts by Day"
                },
                Scales = new BarScales
                {
                    XAxes = new List<CartesianAxis> {
                        new BarCategoryAxis {
                            BarThickness = BarThickness.Flex,
                            Stacked = false
                        }
                    }
                },
                Responsive = true,
            }
        };

        _doughnutChartConfigPatient.Data.Labels.AddRange(new[] { "Michigan", "Ohio", "Illinois", "Indiana" });
        _doughnutChartConfigOrganization.Data.Labels.AddRange(new[] { "Healthcare Provider", "Hospital Department", "Government", "Insurance Company" });
        _doughnutChartConfigClaim.Data.Labels.AddRange(new[] { "Institutional", "Oral", "Pharmacy", "Professional" });
        _barChartConfig.Data.Labels.AddRange(new[] { "12/11/2019", "12/12/2019", "12/13/2019", "12/14/2019" });

        var patientDataset = new PieDataset
        {
            BackgroundColor = new[] {"#1C4E80", "#A5D8DD", "#EA6A47", "#0091D5" },
            BorderWidth = 0,
            HoverBackgroundColor = "#7E909A",
            HoverBorderColor = "#202020",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };

        var organizationDataset = new PieDataset
        {
            BackgroundColor = new[] {"#1C4E80", "#A5D8DD", "#EA6A47", "#0091D5" },
            BorderWidth = 0,
            HoverBackgroundColor = "#7E909A",
            HoverBorderColor = "#202020",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };

        var claimsDataset = new PieDataset
        {
            BackgroundColor = new[] {"#1C4E80", "#A5D8DD", "#EA6A47", "#0091D5" },
            BorderWidth = 0,
            HoverBackgroundColor = "#7E909A",
            HoverBorderColor = "#202020",
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };

        var barSet1 = new BarDataset<DoubleWrapper> {
			Label = "Patients",
			BackgroundColor = "#0091D5",
			BorderWidth = 1,
			HoverBackgroundColor = ColorUtil.ColorString(0, 0, 0, 0.1),
			HoverBorderColor = "#202020",
			HoverBorderWidth = 1,
			BorderColor = "#ffffff",
		};

        var barSet2 = new BarDataset<DoubleWrapper> {
			Label = "Organizations",
			BackgroundColor = "#A5D8DD",
			BorderWidth = 1,
			HoverBackgroundColor = ColorUtil.ColorString(0, 0, 0, 0.1),
			HoverBorderColor = "#202020",
			HoverBorderWidth = 1,
			BorderColor = "#ffffff",
		};

        var barSet3 = new BarDataset<DoubleWrapper> {
			Label = "Claims",
			BackgroundColor = "#EA6A47",
			BorderWidth = 1,
			HoverBackgroundColor = ColorUtil.ColorString(0, 0, 0, 0.1),
			HoverBorderColor = "#202020",
			HoverBorderWidth = 1,
			BorderColor = "#ffffff",
		};

        patientDataset.Data.AddRange(new double[] { 170, 23, 10, 6 });
        organizationDataset.Data.AddRange(new double[] { 23, 9, 6, 15 });
        claimsDataset.Data.AddRange(new double[] { 34, 15, 181, 316 });
        barSet1.AddRange(new double[] { 7, 5, 2, 9}.Wrap());
        barSet2.AddRange(new double[] { 1, 3, 1, 2}.Wrap());
        barSet3.AddRange(new double[] { 15, 44, 21, 17}.Wrap());
        _doughnutChartConfigPatient.Data.Datasets.Add(patientDataset);
        _doughnutChartConfigOrganization.Data.Datasets.Add(organizationDataset);
        _doughnutChartConfigClaim.Data.Datasets.Add(claimsDataset);
        _barChartConfig.Data.Datasets.Add(barSet1);
        _barChartConfig.Data.Datasets.Add(barSet2);
        _barChartConfig.Data.Datasets.Add(barSet3);
    }
}
