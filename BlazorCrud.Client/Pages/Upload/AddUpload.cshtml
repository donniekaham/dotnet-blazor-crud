@page "/upload/new"
@inject HttpClient Http
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper
@inject LocalStorage Storage

<h1>Create</h1>
<h3>Upload</h3>

<hr />
<div class="row">
    <div class="col-md-4">
        <ValidatedForm Model="@upload" OnSubmit="@CreateUpload">
            <div class="form-group">
                <label for="FileName" class="control-label">File Name</label>
                <input for="FileName" class="form-control" bind="@upload.FileName" />
                <ClientValidationError FieldName="FileName" Model="upload" />
            </div>
            <div class="form-group">
                <label for="FileContent" class="control-label">File</label>
                <input ref="fileContent" class="form-control-file" type="file"
                    onchange="@(async (e) => @upload.FileContent = await JSRuntime.Current.InvokeAsync<string>("readFileAsBase64", fileContent))" />
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-success">Save</button>
                <button class="btn btn-primary" onclick="@cancel">Cancel</button>
            </div>
        </ValidatedForm>
    </div>
</div>

@functions{
    ElementRef fileContent;

    Upload upload = new Upload();

    protected async Task CreateUpload(UIEventArgs ev)
    {
        var token = Storage["JWT-Token"];
        Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
        await Http.SendJsonAsync(HttpMethod.Post, Storage["environment_uri"] + "/upload", upload);

        UriHelper.NavigateTo("/upload/modified");
    }

    void cancel()
    {
        UriHelper.NavigateTo("/upload/cancelled");
    }
}