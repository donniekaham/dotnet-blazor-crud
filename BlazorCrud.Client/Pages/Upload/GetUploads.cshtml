@page "/upload/list/{Page}"
@page "/upload/{Transaction}"
@addTagHelper *, BlazorStrap
@inject HttpClient Http
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper
@using BlazorCrud.Shared.Data
@inject LocalStorage Storage
@inject Sotsera.Blazor.Toaster.IToaster toaster

@if (Transaction == "modified")
{
    toaster.Success("Upload successfully updated in the system.", "User Updated");
}
@if (Transaction == "cancelled")
{
    toaster.Warning("Upload transaction has been cancelled.", "Transaction Cancelled");
}

<h1>Upload Data</h1>

@if (isLoggedOn())
{
    <p>
        <a href="/upload/new" class="btn btn-primary">Add New Upload</a>
    </p>
}

@if (Uploads == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <BlazorTable IsResponsive="true" class='table'>
        <thead class="thead-light">
            <tr>
                <th>ID</th>
                <th>Filename</th>
                <th>Upload Time</th>
                <th>Processed Time</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var upload in Uploads.Results)
            {
                <tr>
                    <td>@upload.Id</td>
                    <td>@upload.FileName</td>
                    <td>@upload.UploadTimestamp</td>
                    <td>@upload.ProcessedTimestamp</td>
                    <td>
                        <ActionLinkButton Action="view" Route="/upload" RouteValue="@upload.Id.ToString()"></ActionLinkButton>
                    </td>
                </tr>
            }
        </tbody>
    </BlazorTable>
    <Pager Result=@Uploads PageChanged=@PagerPageChanged />
}

@functions {
    [Parameter]
    protected string Page { get; set; } = "1";
    [Parameter]
    protected string Transaction { get; set; }

    protected PagedResult<Upload> Uploads;

    protected override async Task OnParametersSetAsync()
    {
        Uploads = await Http.GetJsonAsync<PagedResult<Upload>>(Storage["environment_uri"] + "/upload/?page=" + Page);
    }

    protected void PagerPageChanged(int page)
    {
        Transaction = string.Empty;
        UriHelper.NavigateTo("/upload/list/" + page);
    }

    protected bool isLoggedOn()
    {
        return (Storage["JWT-Token"] != String.Empty && DateTime.Now.Ticks < Convert.ToInt64(Storage["JWT-Time-Exire"]));
    }
}