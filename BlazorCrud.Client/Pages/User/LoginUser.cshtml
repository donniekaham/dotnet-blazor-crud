@page "/user/login"
@inject HttpClient Http
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper
@inject LocalStorage Storage

<h1>Login</h1>
<h3>User</h3>

<hr />

<div class="row">
    <div class="col-md-4">
        <ValidatedForm Model="@login" OnSubmit="@LogonUser">
            <div class="form-group">
                <label for="Username" class="control-label">User Name</label>
                <input for="Username" class="form-control" bind="@login.Username" />
                <ClientValidationError FieldName="Username" Model="login" />
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label">Password</label>
                <input asp-for="Password" class="form-control" type="password" bind="@login.Password" />
                <ClientValidationError FieldName="Password" Model="login" />
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-default">Login</button>
                <button class="btn" onclick="@cancel">Cancel</button>
            </div>
        </ValidatedForm>
    </div>
</div>

@functions {
    Login login = new Login();

    protected async Task LogonUser(UIEventArgs ev)
    {
        if (UriHelper.GetBaseUri() == "http://localhost:10001/")
        {
            var response = await Http.PostJsonAsync<JwtToken>("http://localhost:10002/api/user/logon", login);
            Storage["JWT-Token"] = response.token;
        }
        else
        {
            var response = await Http.PostJsonAsync<JwtToken>("http://becksapi.azurewebsites.net/api/user/logon", login);
            Storage["JWT-Token"] = response.token;
        }
        UriHelper.NavigateTo("/");
    }

    void cancel()
    {
        UriHelper.NavigateTo("/");
    }
}