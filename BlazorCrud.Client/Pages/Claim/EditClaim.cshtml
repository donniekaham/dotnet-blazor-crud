@page "/claim/edit/{Id}"
@inject HttpClient Http
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper
@inject LocalStorage Storage

<h1>Edit</h1>
<h3>Claim</h3>

<hr />
<div class="row">
    <div class="col-md-4">
        <ValidatedForm Model="@claim" OnSubmit="@UpdateClaim">
            <div class="form-group">
                <label for="Patient" class="control-label">Patient</label>
                <input for="Patient" class="form-control" bind="@claim.Patient" />
                <ClientValidationError FieldName="Patient" Model="claim" />
            </div>
            <div class="form-group">
                <label for="Organization" class="control-label">Organization</label>
                <input for="Organization" class="form-control" bind="@claim.Organization" />
                <ClientValidationError FieldName="Organization" Model="claim" />
            </div>
            <div class="form-group">
                <label asp-for="Status" class="control-label">Status</label>
                <select asp-for="Status" class="form-control" bind="@claim.Status">
                    <option value="">-- Select Status --</option>
                    <option value="Active">Active</option>
                    <option value="Cancelled">Cancelled</option>
                    <option value="Draft">Draft</option>
                    <option value="Entered-in-Error">Entered-in-Error</option>
                </select>
                <ClientValidationError FieldName="Status" Model="claim" />
            </div>
            <div class="form-group">
                <label asp-for="Type" class="control-label">Type</label>
                <select asp-for="Type" class="form-control" bind="@claim.Type">
                    <option value="">-- Select Type --</option>
                    <option value="Institutional">Institutional</option>
                    <option value="Oral">Oral</option>
                    <option value="Pharmacy">Pharmacy</option>
                    <option value="Professional">Professional</option>
                    <option value="Vison">Vision</option>
                </select>
                <ClientValidationError FieldName="Type" Model="claim" />
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-default">Save</button>
                <button class="btn" onclick="@cancel">Cancel</button>
            </div>
        </ValidatedForm>
    </div>
</div>

@functions {
    [Parameter]
    string Id { get; set; }

    Claim claim = new Claim();

    protected override async Task OnInitAsync()
    {
        if (!(Storage["JWT-Token"] != String.Empty && DateTime.Now.Ticks < Convert.ToInt64(Storage["JWT-Time-Exire"]))) // not logged on
        {
            UriHelper.NavigateTo("/user/login");
        }

        if (UriHelper.GetBaseUri() == "http://localhost:10001/")
        {
            claim = await Http.GetJsonAsync<Claim>("http://localhost:10002/api/claim/" + Convert.ToInt32(Id));
        }
        else
        {
            claim = await Http.GetJsonAsync<Claim>("http://becksapi.azurewebsites.net/api/claim/" + Convert.ToInt32(Id));
        }
    }

    protected async Task UpdateClaim(UIEventArgs ev)
    {
        if (UriHelper.GetBaseUri() == "http://localhost:10001/")
        {
            var token = Storage["JWT-Token"];
            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
            await Http.SendJsonAsync(HttpMethod.Put, "http://localhost:10002/api/claim/" + Convert.ToInt32(Id), claim);
        }
        else
        {
            var token = Storage["JWT-Token"];
            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
            await Http.SendJsonAsync(HttpMethod.Put, "http://becksapi.azurewebsites.net/api/claim/" + Convert.ToInt32(Id), claim);
        }
        UriHelper.NavigateTo("/claim/modified");
    }

    void cancel()
    {
        UriHelper.NavigateTo("/claim/cancelled");
    }
}