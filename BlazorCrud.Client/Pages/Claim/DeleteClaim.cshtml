@page "/claim/delete/{Id}"
@inject HttpClient Http
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper
@inject LocalStorage Storage

<h1>Delete</h1>
<h3>Are you sure you want to delete the claim with id : @Id</h3>

<br />
<div class="col-md-4">
    <table class="table">
        <tr>
            <td>Patient</td>
            <td>@claim.Patient</td>
        </tr>
        <tr>
            <td>Organization</td>
            <td>@claim.Organization</td>
        </tr>
        <tr>
            <td>Status</td>
            <td>@claim.Status</td>
        </tr>
        <tr>
            <td>Type</td>
            <td>@claim.Type</td>
        </tr>
    </table>
    <div class="form-group">
        <button type="button" class="btn btn-default" onclick="@(async () => await RemoveClaim())">Delete</button>
        <button class="btn" onclick="@cancel">Cancel</button>
    </div>
</div>

@functions {
[Parameter]
string Id { get; set; }

Claim claim = new Claim();

protected override async Task OnInitAsync()
{
    if (UriHelper.GetBaseUri() == "http://localhost:10001/")
    {
        claim = await Http.GetJsonAsync<Claim>("http://localhost:10002/api/claim/" + Convert.ToInt32(Id));
    }
    else
    {
        claim = await Http.GetJsonAsync<Claim>("http://becksapi.azurewebsites.net/api/claim/" + Convert.ToInt32(Id));
    }
}

protected async Task RemoveClaim()
{
    if (UriHelper.GetBaseUri() == "http://localhost:10001/")
    {
        var token = Storage["JWT-Token"];
        Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
        await Http.DeleteAsync("http://localhost:10002/api/claim/" + Convert.ToInt32(Id));
    }
    else
    {
        var token = Storage["JWT-Token"];
        Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
        await Http.DeleteAsync("http://becksapi.azurewebsites.net/api/claim/" + Convert.ToInt32(Id));
    }
    UriHelper.NavigateTo("/claim/modified");
}
void cancel()
{
    UriHelper.NavigateTo("/claim/cancelled");
}
}